######################################################################
# Automatically generated by qmake (2.01a) Thu Jun 13 12:57:30 2013
######################################################################

# Build options

# screen can be: cursed_screen, text_screen, 3d_soft_screen, 3d_opengl_screen
#CONFIG += cursed_screen
CONFIG += 3d_soft_screen
#CONFIG += 3d_opengl_screen
#CONFIG += text_screen

CONFIG += thread warn_on console
CONFIG += debug

# compile with clang:
#CONFIG += clang
#CONFIG += g++-old

VERSION = 0.3
VERSTR = '\\"$${VERSION}\\"'
DEFINES += VER=\"$${VERSTR}\"
TEMPLATE = app

#TODO - disable -ftree-loop-distribute-patterns
QMAKE_CXXFLAGS += -std=c++11
#QMAKE_CXXFLAGS += -Weffc++ -Wold-style-cast -Werror
QMAKE_CXXFLAGS += -Wfloat-equal -Woverloaded-virtual -Wundef --save-temps -march=pentium4 -fno-tree-loop-distribute-patterns

#QMAKE_CXXFLAGS_DEBUG += -fno-inline
QMAKE_CXXFLAGS_RELEASE -= -O2
QMAKE_CXXFLAGS_RELEASE += -DQT_NO_DEBUG
QMAKE_CXXFLAGS += -O3
QMAKE_CXXFLAGS += -fstrict-enums -fno-rtti -fno-strict-aliasing

clang {
    QMAKE_CXX  = clang++
    QMAKE_LINK = clang++
} else {
    QMAKE_CXXFLAGS_RELEASE += -s
    QMAKE_CXXFLAGS += -Wdouble-promotion
    g++-old {
        QMAKE_CXX  = g++-4.8
        QMAKE_LINK = g++-4.8
    }
}
DEFINES += COMPILER=\"\\\"$${QMAKE_CXX}\"\\\"

cursed_screen {
    TARGET = freg-nox
    QT -= gui
    DEFINES += CURSED_SCREEN
    HEADERS += screens/CursedScreen.h
    SOURCES += screens/CursedScreen.cpp
} else:text_screen {
    TARGET = freg-text
    QT -= gui
    DEFINES += TEXT_SCREEN
    HEADERS += screens/TextScreen.h
    SOURCES += screens/TextScreen.cpp
}else:3d_soft_screen {
	TARGET = freg-3d_soft_screen
	QT += gui
	QT += widgets
	DEFINES += SOFTWARE_SCREEN_3D
	HEADERS += screens/3dSoftScreen.h
	SOURCES += screens/3dSoftScreen.cpp

	HEADERS += screens/3d_soft_screen/data_structures.h
	HEADERS += screens/3d_soft_screen/psr/rasterization.h
	HEADERS += screens/3d_soft_screen/psr/psr.h
	HEADERS += screens/3d_soft_screen/psr/rendering_state.h
	HEADERS += screens/3d_soft_screen/psr/texture.h
	HEADERS += screens/3d_soft_screen/psr/rendering_commands.h
	HEADERS += screens/3d_soft_screen/s_world_renderer.h
	HEADERS += screens/3d_soft_screen/psr/fixed.h
	HEADERS += screens/3d_soft_screen/psr/fast_math.h
	HEADERS += screens/3d_soft_screen/psr/vertex_processing.h
	HEADERS += screens/math_lib/vec.h
	HEADERS += screens/math_lib/rand.h
	HEADERS += screens/math_lib/matrix.h
	HEADERS += screens/math_lib/m_math.h

	SOURCES += screens/3d_soft_screen/s_chunk_info.cpp
	SOURCES += screens/3d_soft_screen/s_world_renderer.cpp
	SOURCES += screens/3d_soft_screen/psr/rasterization.cpp
	SOURCES += screens/3d_soft_screen/psr/texture.cpp
	SOURCES += screens/3d_soft_screen/psr/rendering_commands.cpp
	SOURCES += screens/3d_soft_screen/psr/fullscreen_draw_commands.cpp
	SOURCES += screens/3d_soft_screen/psr/vertex_processing.cpp
	SOURCES += screens/math_lib/vec.cpp
	SOURCES += screens/math_lib/matrix.cpp
	SOURCES += screens/math_lib/rand.cpp
	SOURCES += screens/math_lib/m_math.cpp
} else {
    error("define screen type in CONFIG!")
}

unix:cursed_screen {
    LIBS += -lncursesw
    target.path += /usr/bin
    INSTALLS += target
} else:win32 {
    # path =(
	#LIBS += -LC:/Users/Alexander/src/FREG/pdcurses -lpdcurses
}

HEADERS += \
    BlockManager.h \
    CraftManager.h \
    DeferredAction.h \
    header.h \
    Player.h \
    Shred.h \
    screens/VirtScreen.h \
    World.h \
    worldmap.h \
    ShredStorage.h \
    Xyz.h \
    screens/IThread.h \
    blocks/blocks.h \
    blocks/Block.h \
    blocks/Active.h \
    blocks/Inventory.h \
    blocks/Animal.h \
    blocks/Dwarf.h \
    blocks/Bucket.h \
    blocks/Illuminator.h \
    blocks/Weapons.h \
    blocks/Containers.h \
    blocks/RainMachine.h \
    blocks/Armour.h \
	blocks/Filter.h
SOURCES += \
    BlockManager.cpp \
    CraftManager.cpp \
    DeferredAction.cpp \
    Lighting-inertia.cpp \
    main.cpp \
    Player.cpp \
    Shred-gen-flat.cpp \
    Shred.cpp \
    screens/VirtScreen.cpp \
    World.cpp \
    worldmap.cpp \
    ShredStorage.cpp \
    Xyz.cpp \
    screens/IThread.cpp \
    blocks/blocks.cpp \
    blocks/Active.cpp \
    blocks/Dwarf.cpp \
    blocks/Weapons.cpp \
    blocks/Illuminator.cpp \
    blocks/Inventory.cpp \
    blocks/Bucket.cpp \
    blocks/Containers.cpp \
    blocks/Block.cpp \
    blocks/RainMachine.cpp \
    blocks/Armour.cpp \
    blocks/Animal.cpp \
	blocks/Filter.cpp

INCLUDEPATH += .

TRANSLATIONS = \
    freg_ru.ts

RESOURCES = resources.qrc

DISTFILES += \
    texts/death.txt \
    texts/splash.txt \
    recipes/*.json \
    help_*/* \
    freg_ru.qm \
    debian/c* \
    debian/rules \
    debian/usr/share/doc/freg/copyright \
    debian/source/format \
    debian/source/include-binaries \
    fregMap.vim \
    *.md

MOC_DIR = moc
OBJECTS_DIR = obj
